{"version":3,"file":"write-bundles.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-v5/entry-point/write-bundles.transform.ts"],"names":[],"mappings":";;AAAA,8CAAgD;AAChD,6DAA0D;AAC1D,yCAAsC;AAEtC,mDAA0E;AAE1E,oCAAgE;AAEnD,QAAA,qBAAqB,GAAc,WAAI,CAClD,qBAAS,CAAC,KAAK,CAAC,EAAE;IAChB,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,8BAAsB,EAAE,CAAC,CAAC;IACxD,MAAM,YAAY,GAAiB,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;IAE9D,sCAAsC;IACtC,MAAM,gBAAgB,GAAG,UAAU;SAChC,MAAM,CAAC,oBAAY,CAAC;SACpB,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;SAC7B,MAAM,CAAC,CAAC,IAAI,EAAE,EAAgB,EAAE,EAAE;QACjC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;QAE7B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,EAAE,EAAE,CAAC,CAAC;IAET,MAAM,IAAI,GAAgB;QACxB,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,eAAe;QAC1C,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ;QAChC,cAAc,EAAE,YAAY,CAAC,cAAc;QAC3C,WAAW,EAAE,YAAY,CAAC,QAAQ;QAClC,WAAW,EAAE,YAAY,CAAC,KAAK;QAC/B,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,YAAY,oBACP,YAAY,CAAC,YAAY,EACzB,gBAAgB,CACpB;QACD,QAAQ,EAAE,YAAY,CAAC,QAAQ;QAC/B,QAAQ,EAAE,YAAY,CAAC,QAAQ;QAC/B,WAAW,EAAE,YAAY,CAAC,WAAW;KACtC,CAAC;IAEF,MAAM,CAAC,yBAAW,CAAC,8BAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CACH,CAAC","sourcesContent":["import { map, switchMap } from 'rxjs/operators';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { pipe } from 'rxjs/util/pipe';\nimport { Transform } from '../../brocc/transform';\nimport { writeFlatBundleFiles, FlattenOpts } from '../../flatten/flatten';\nimport { NgEntryPoint } from '../../ng-package-format/entry-point';\nimport { isEntryPoint, isEntryPointInProgress } from '../nodes';\n\nexport const writeBundlesTransform: Transform = pipe(\n  switchMap(graph => {\n    const entryPoint = graph.find(isEntryPointInProgress());\n    const ngEntryPoint: NgEntryPoint = entryPoint.data.entryPoint;\n\n    // Add UMD module IDs for dependencies\n    const dependencyUmdIds = entryPoint\n      .filter(isEntryPoint)\n      .map(ep => ep.data.entryPoint)\n      .reduce((prev, ep: NgEntryPoint) => {\n        prev[ep.moduleId] = ep.umdId;\n\n        return prev;\n      }, {});\n\n    const opts: FlattenOpts = {\n      entryFile: entryPoint.data.es2015EntryFile,\n      outDir: entryPoint.data.stageDir,\n      flatModuleFile: ngEntryPoint.flatModuleFile,\n      esmModuleId: ngEntryPoint.moduleId,\n      umdModuleId: ngEntryPoint.umdId,\n      amdId: ngEntryPoint.amdId,\n      umdModuleIds: {\n        ...ngEntryPoint.umdModuleIds,\n        ...dependencyUmdIds\n      },\n      embedded: ngEntryPoint.embedded,\n      comments: ngEntryPoint.comments,\n      licensePath: ngEntryPoint.licensePath\n    };\n\n    return fromPromise(writeFlatBundleFiles(opts)).pipe(map(() => graph));\n  })\n);\n"]}